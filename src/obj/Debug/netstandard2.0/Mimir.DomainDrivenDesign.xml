<?xml version="1.0" encoding="utf-8"?>
<doc>
<assembly><name>Mimir.DomainDrivenDesign</name></assembly>
<members>
<member name="M:Mimir.DomainDrivenDesign.Constraint.int``1(Elm.Core.Basics.Order,System.Int32,Microsoft.FSharp.Core.FSharpFunc{``0,System.Int32})">
<summary>
 Specify a constraint on an `Int` value.

 - `constraint`: Constrain the actual value to be `LT`, `GT` or`EQ` to `constraintValue`.
 - `constraintValue`: The value that the actual value is compared to using `compareValue`.
 - `getValue`: get the actual value from the `source`.
 - `source`: the source of the value.

</summary>
</member>
<member name="M:Mimir.DomainDrivenDesign.Constraint.withValue``2(Elm.Core.Basics.Order,``0,Microsoft.FSharp.Core.FSharpFunc{``1,``0},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``0,Elm.Core.Basics.Order}},Microsoft.FSharp.Core.FSharpFunc{``0,System.String},``1)">
<summary>
 Specify a constraint on a value.

 - `constraint`: Constrain the actual value to be `LT`, `GT` or`EQ` to `constraintValue`.
 - `constraintValue`: The value that the actual value is compared to using `compareValue`.
 - `getValue`: get the actual value from the `source`.
 - `compareValue`: a function that can compare 2 values of `value`.
 - `convertValue`: a function that can convert values of `value` to `String`.
 - `source`: the source of the value.

</summary>
</member>
</members>
</doc>
